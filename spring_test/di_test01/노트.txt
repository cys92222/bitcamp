<< 프레임워크(framework) >>
	- 어플리케이션을 구현하기에 용이한 뼈대를 말합니다


<< spring >>
	- 프레임워크 종류 중의 하나 입니다
	- 프레임워크 중에 전세계적으로 널리 애용되는 것은 spring, struts 등이 있습니다
	- 우리나라는 공공프로젝트는 전자정부표준프레임워크에 spring, mybatis가 표준으로 채택되어 있어요

<< 스프링의 주요 특징 >>

1. DI(의존성 주입)
   
   자바로 만들어진 sw속을 들여다 보면 수많은 클래스로 구성되어 있습니다.
	그 중에서도 has a 관계는
	어떤 클래스가 다른 클래스의 맴버변수가 되는 것을 말합니다
	예를 들어 다음과 같은 코드를 봅시다

		class A
		{
			B ob;
		}
	B클래스의 변수 ob는 A클래스의 맴버입니다. 이것은 A has a B라고 표현합니다.
	
	B클래스입장에서 A클래스를 사용하려면 코드 어딘가에
	ob = new B() 라고 객체를 생성하는 문장이 잇어야 할 것입니다
	
	그런데 만약 우리의 고객이
	A의 맴버 B를 B말고 다른것(C)으로 변경 해달라는 요청이 들어 왓다고 가정합니다.
	new B()라고 되어 있는 코드를 찾아서 new C()로 직접 고쳐야 합니다.
	
	그런데 이 B가 사용된 곳이 A한 군데만 있는 것이 아니라
	여러곳(수십곳 혹은 그 이상)에서 사용되었다면
	일일이 관련코드를 찾아 바꾸기란 상상만 해도 끔찍해요
	또, 미쳐 못바꾼 부분이 있을 수도 있어요
	이와 같이 코드내에 직접 new B()라고 되어 있는 부분을
	"강한 의존관계"에 있다라고 합니다
	우리는 사용자의 빈번한 수정에 대한 요구에
	유연하게 대처하기 위하여
	스프링 환경설정에 의하여 "느슨한 의존관계" 또
	"의존 관계 자동 설정"을 이용하려고 합니다
	즉, 스프링 환경설정파일(xml, 어노테이션)에 의하여
	어플리케이션에서 피룡한 객체를 제공하여 의존관계를
	설정하려고 합니다
	이렇게 하면 사용자의 빈번한 수정이 있다하더라도
	일일이 찾아 다니면서 코드를 수정해야하는 번거로움을 줄일수 있어요
	환경설정파일만 수정해 주면 됩니다


2. AOP






