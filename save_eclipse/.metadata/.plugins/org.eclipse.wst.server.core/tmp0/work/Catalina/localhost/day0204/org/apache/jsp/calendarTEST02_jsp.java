/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-02-04 09:17:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sun.tools.classfile.Opcode.Set;
import java.util.Calendar;
import java.util.GregorianCalendar;

public final class calendarTEST02_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		//다음달 달력을 출력하도록 코드를 수정하세요!
		int year = 0;
		int month = 0;
		
		GregorianCalendar today = new GregorianCalendar();
		year = today.get(Calendar.YEAR);
		month = today.get(Calendar.MONTH);
		
		int thisYear = today.get(Calendar.YEAR);
		int thisMonth = today.get(Calendar.MONTH);
		int date = today.get(Calendar.DATE);
		
		if(request.getParameter("year") != null){
			year = Integer.parseInt(request.getParameter("year"));	
			month = Integer.parseInt(request.getParameter("month"));	
		
			System.out.println("전달된 연도:"+year);
			System.out.println("전달된 월:"+month);
		}
		
		if(month >= 12 ){
			month = 0;
			year++;
		}
		
		if(month < 0){
			month = 11;
			year--;
		}
	
		String tdColor ;
		String textColor;
		
		
		int lastday[] = {31,28,31,30,31,30,31,31,30,31,30,31};
		int last = lastday[month];
		
		if(today.isLeapYear(year) && month == 1){
			last = 29;
		}
		
		GregorianCalendar startDay = new GregorianCalendar(year, month, 1);
		int yoil = startDay.get(Calendar.DAY_OF_WEEK); //일요일이 1, date에서는 일요일이 0
		yoil--;
		
	
      out.write("\r\n");
      out.write("<h2><a href=\"calendarTEST02.jsp?year=");
      out.print(year );
      out.write("&month=");
      out.print(month-1 );
      out.write("\">이전달</a>");
      out.print(year );
      out.write('년');
      out.write(' ');
      out.print(month+1 );
      out.write("월 <a href=\"calendarTEST02.jsp?year=");
      out.print(year );
      out.write("&month=");
      out.print(month+1 );
      out.write("\">다음달</a>\t</h2>\r\n");
      out.write("\t<br>\r\n");
      out.write("\r\n");
      out.write("\t<table border=\"1\" width=\"60%\" height=\"400\">\r\n");
      out.write("\t\t<tr bgcolor=\"pink\">\r\n");
      out.write("\t\t\t<td>일</td>\r\n");
      out.write("\t\t\t<td>월</td>\r\n");
      out.write("\t\t\t<td>화</td>\r\n");
      out.write("\t\t\t<td>수</td>\r\n");
      out.write("\t\t\t<td>목</td>\r\n");
      out.write("\t\t\t<td>금</td>\r\n");
      out.write("\t\t\t<td>토</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t");

			for(int j = 1; j <= yoil; j++){
				
      out.write("\r\n");
      out.write("\t\t\t\t<td>&nbsp;</td>\r\n");
      out.write("\t\t\t\t");

			}
			
			for(int i = 1; i <= last; i++){
				tdColor = "white";
				textColor = "black";
				if( year == thisYear && month == thisMonth && i  == date  ){
					tdColor = "yellow";
				}
	
				if((i+yoil) %7 == 0){
					textColor = "blue";
				}
				
				if((i+yoil) %7 == 1){
					textColor = "red";
				}
				
      out.write("\r\n");
      out.write("\t\t\t\t<td style=\"color: ");
      out.print(textColor );
      out.write("\" bgcolor=\"");
      out.print(tdColor );
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print(i );
      out.write(" </td>\r\n");
      out.write("\t\t\t\t");

				if( (i+yoil) %7 == 0 && i != last){
					
      out.write("\r\n");
      out.write("\t\t\t\t\t</tr><tr>\r\n");
      out.write("\t\t\t\t\t");

				}
			}
		
		
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
